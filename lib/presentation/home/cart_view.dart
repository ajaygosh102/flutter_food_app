import 'package:flutter/material.dart';import 'package:flutter_food_app/config/locator.dart';import 'package:flutter_food_app/config/router.gr.dart';import 'package:flutter_food_app/config/theme.dart';import 'package:flutter_food_app/data/global_data.dart';import 'package:flutter_food_app/data/home_data_model.dart';import 'package:flutter_food_app/presentation/widgets/toast.dart';import 'package:flutter_food_app/presentation/widgets/ui_helper.dart';import 'package:stacked_services/stacked_services.dart';class CartScreen extends StatefulWidget {  @override  _CartScreenState createState() => _CartScreenState();}class _CartScreenState extends State<CartScreen> {  final NavigationService _navigationService = locator<NavigationService>();  double totalPrice = 0.0;  int totalItems = 0;  @override  Widget build(BuildContext context) {    totalPrice = 0.0;    totalItems = 0;    GlobalData.cartItems.forEach((element) {      totalPrice += element.dishPrice * element.cartedItem;      totalItems += element.cartedItem;    });    return Scaffold(      backgroundColor: Colors.white,      appBar: AppBar(        title:            Text('Order Summery', style: Theme.of(context).textTheme.subtitle1),      ),      body: Padding(        padding: const EdgeInsets.all(8.0),        child: SingleChildScrollView(          child: Card(            child: Column(              children: [                Text('${GlobalData.cartItems.length}' +                    ' Dishes - $totalItems Items'),                ListView.builder(                  physics: NeverScrollableScrollPhysics(),                  shrinkWrap: true,                  itemCount: GlobalData.cartItems?.length ?? 0,                  itemBuilder: (context, index) {                    CategoryDish categoryDish = GlobalData.cartItems[index];                    return Padding(                      padding: const EdgeInsets.all(8.0),                      child: Column(                        crossAxisAlignment: CrossAxisAlignment.start,                        children: [                          Text(categoryDish?.dishName ?? '',                              style: Theme.of(context)                                  .textTheme                                  .bodyText1                                  .copyWith(fontWeight: FontWeight.bold)),                          verticalSpaceSmall,                          Row(                            mainAxisAlignment: MainAxisAlignment.spaceBetween,                            children: [                              Text(                                  '₹ ' + categoryDish.dishPrice?.toString() ??                                      '',                                  style: Theme.of(context)                                      .textTheme                                      .bodyText2                                      .copyWith(fontWeight: FontWeight.bold)),                              Text(                                  categoryDish.dishCalories                                          ?.toInt()                                          .toString() +                                      ' Calories',                                  style: Theme.of(context)                                      .textTheme                                      .bodyText2                                      .copyWith(fontWeight: FontWeight.bold))                            ],                          ),                          verticalSpaceSmall,                          Text(categoryDish?.dishDescription ?? '',                              style: Theme.of(context).textTheme.bodyText2),                          verticalSpaceSmall,                          SizedBox(                            width: 120,                            height: 40,                            child: Container(                              decoration: BoxDecoration(                                  color: Colors.green,                                  borderRadius: BorderRadius.circular(20)),                              child: Row(                                children: <Widget>[                                  IconButton(                                    icon: new Icon(Icons.remove,                                        color: Colors.white),                                    onPressed: categoryDish.cartedItem > 0                                        ? () {                                            setState(() {                                              categoryDish.cartedItem--;                                              if (categoryDish.cartedItem ==                                                  0) {                                                GlobalData.cartItems                                                    .remove(categoryDish);                                                GlobalData.cartItems = [                                                  ...{...GlobalData.cartItems}                                                ];                                                print(GlobalData.cartItems);                                              }                                            });                                          }                                        : null,                                  ),                                  Text(categoryDish.cartedItem.toString(),                                      style: Theme.of(context)                                          .textTheme                                          .bodyText2                                          .copyWith(color: Colors.white)),                                  IconButton(                                      icon: new Icon(                                        Icons.add,                                        color: Colors.white,                                      ),                                      onPressed: () {                                        setState(() {                                          categoryDish.cartedItem++;                                          GlobalData.cartItems                                              .add(categoryDish);                                          GlobalData.cartItems = [                                            ...{...GlobalData.cartItems}                                          ];                                          print(GlobalData.cartItems);                                        });                                      })                                ],                              ),                            ),                          ),                          verticalSpaceSmall,                          Text(                              categoryDish.addonCat.isNotEmpty                                  ? 'Customization Available'                                  : '',                              style: Theme.of(context)                                  .textTheme                                  .bodyText2                                  .copyWith(color: Colors.red)),                          Divider(                            color: AppColors.darkGray,                          )                        ],                      ),                    );                  },                ),                Row(                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                  children: [                    Text(                      'Total Amount',                      style: Theme.of(context).textTheme.subtitle1,                    ),                    Text(                      '₹ ' + totalPrice.toDouble().toString(),                      style: Theme.of(context).textTheme.subtitle1,                    ),                  ],                ),                Padding(                  padding: const EdgeInsets.symmetric(horizontal: 20),                  child: Container(                    width: double.infinity,                    child: RaisedButton(                      shape: RoundedRectangleBorder(                          borderRadius: BorderRadius.circular(20)),                      color: Colors.green,                      child: Text(                        'Place Order',                        style: Theme.of(context).textTheme.button,                      ),                      onPressed: () {                        showToast(msg: 'Order successfully placed');                        GlobalData.cartItems.clear();                        _navigationService                            .pushNamedAndRemoveUntil(Routes.homeScreen);                      },                    ),                  ),                ),                verticalSpaceSmall,              ],            ),          ),        ),      ),    );  }}