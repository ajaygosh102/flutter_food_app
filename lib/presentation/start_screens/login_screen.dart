import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:flutter_food_app/config/locator.dart';import 'package:flutter_food_app/config/router.gr.dart';import 'package:flutter_food_app/presentation/widgets/circle_progressbar.dart';import 'package:flutter_food_app/presentation/widgets/ui_helper.dart';import 'package:stacked_services/stacked_services.dart';import 'bloc/login_bloc_cubit.dart';class LoginScreen extends StatefulWidget {  @override  _LoginScreenState createState() => _LoginScreenState();}class _LoginScreenState extends State<LoginScreen> {  var phoneController = TextEditingController();  var otpController = TextEditingController();  LoginBlocCubit loginBlocCubit = LoginBlocCubit();  final NavigationService _navigationService = locator<NavigationService>();  String phoneNumber;  String verificationCode;  FirebaseAuth firebaseAuth = FirebaseAuth.instance;  String verificationId;  @override  void initState() {    //Firebase.initializeApp();    phoneController.text = '+91 9605295502';    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colors.white,      body: Padding(        padding: const EdgeInsets.all(20.0),        child: Column(          mainAxisAlignment: MainAxisAlignment.center,          children: [            Image.network(              'https://www.gstatic.com/devrel-devsite/prod/va86e410c3836eceeddcebcf4b4d8ca612c34448e39d45400c1d2761bf99aed92/firebase/images/touchicon-180.png',              height: 150,            ),            TextFormField(              controller: phoneController,              decoration: InputDecoration(labelText: 'Email or Phone'),            ),            verticalSpaceMedium,            // TextFormField(            //   controller: passwordController,            //   obscureText: true,            //   decoration: InputDecoration(labelText: 'Password'),            // ),            verticalSpaceLarge,            BlocBuilder(              cubit: loginBlocCubit,              builder: (context, state) {                print('Login state-----$state');                if (state is LoginDataResponse) {                  WidgetsBinding.instance.addPostFrameCallback((_) {                    _navigationService                        .pushNamedAndRemoveUntil(Routes.homeScreen);                  });                } else if (state is Loading) {                  return showCircleProgress();                }                return FlatButton(                  color: Colors.blue,                  child: Text(                    'Login',                    style: Theme.of(context).textTheme.button,                  ),                  onPressed: (){                    verifyPhone(phoneController.text.trim());                  },                );              },            ),            FlatButton(              child: Text(                'Skip',                style: Theme.of(context).textTheme.subtitle1,              ),              onPressed: () {                _navigationService.pushNamedAndRemoveUntil(Routes.homeScreen);              },            )          ],        ),      ),    );  }  userAuthorized() {    print('can go to next page');  }  Future<void> verifyPhone(phoneNo) async {    final PhoneCodeAutoRetrievalTimeout autoRetrieve = (String verId) {      verificationId = verId;    };    final PhoneCodeSent smsCodeSent = (String verId, [int forceCodeResend]) {      verificationId = verId;    };    final PhoneVerificationCompleted verifiedSuccess = (AuthCredential auth) {      firebaseAuth.signInWithCredential(auth).then((AuthResult value) {        if (value.user != null) {          FirebaseUser user = value.user;          userAuthorized();        } else {          debugPrint('user not authorized');        }      }).catchError((error) {        debugPrint('error : $error');      });    };    final PhoneVerificationFailed veriFailed = (AuthException exception) {      print('${exception.message}');    };    await FirebaseAuth.instance.verifyPhoneNumber(        phoneNumber: phoneNo,        codeAutoRetrievalTimeout: autoRetrieve,        codeSent: smsCodeSent,        timeout: const Duration(seconds: 5),        verificationCompleted: verifiedSuccess,        verificationFailed: veriFailed);  }  void verifyOTP(String smsCode) async {    var _authCredential = PhoneAuthProvider.getCredential(        verificationId: verificationId, smsCode: smsCode);    showDialog(        context: context,        barrierDismissible: false,        builder: (context) {          return Container(            child: Center(              child: CircularProgressIndicator(),            ),          );        });    firebaseAuth        .signInWithCredential(_authCredential)        .then((AuthResult result) {      FirebaseUser user = result.user;      if (user != null) {        userAuthorized();      }      ///go To Next Page    }).catchError((error) {      Navigator.pop(context);    });  }}